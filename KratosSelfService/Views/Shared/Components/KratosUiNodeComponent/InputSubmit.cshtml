@model KratosUiNodeArgs

@{
    var attributes = Model.node.Attributes.GetKratosUiNodeInputAttributes();
    var uiText = attributes.Label ?? Model.node.Meta.Label;
    var buttonType = attributes.Name switch
    {
        "lookup_secret_disable" or "webauthn_remove" or "totp_unlink" or "unlink" or "lookup_secret_confirm" => "is-warning",
        _ => "is-info"
    };
    var label = Model.node.Group == KratosUiNode.GroupEnum.Webauthn && Model.node.Meta?.Label.Id == 1010001 
        ? CustomTranslator.Get($"1010001-webauthn") 
        : OryTranslator.ForUiText(uiText);
}

<div class="field">
    <div class="control">
        @if (Model.FlowType == FlowType.Settings)
        {
            <button type="submit"
                    class="button @buttonType is-fullwidth is-hidden-tablet"
                    required="@attributes.Required"
                    disabled="@attributes.Disabled"
                    value="@attributes.Value"
                    name="@attributes.Name"
                    onclick="@attributes.Onclick">
                <span>@label</span>
            </button>
            <button type="submit"
                    class="button @buttonType is-hidden-mobile"
                    required="@attributes.Required"
                    disabled="@attributes.Disabled"
                    value="@attributes.Value"
                    name="@attributes.Name"
                    onclick="@attributes.Onclick">
                <span>@label</span>
            </button>
        }
        else
        {
            <button type="submit"
                    class="button @buttonType is-fullwidth"
                    required="@attributes.Required"
                    disabled="@attributes.Disabled"
                    value="@attributes.Value"
                    name="@attributes.Name"
                    onclick="@attributes.Onclick">
                <span>@label</span>
            </button>
        }
    </div>
    @await Component.InvokeAsync("KratosUiTextMessages", Model.node.Messages)
</div>