@inject ICustomTranslator Translator
@using KratosSelfService.Extensions
@model KratosSettingsFlow
@{
    ViewData["Title"] = Translator.GetTranslation("Account Settings");
    Layout = "_CardLayout";
    var allGroups = Model.Ui.Nodes
        .GroupBy(node => node.Group).ToList();
    var defaultNodes = allGroups
        .First(group => group.Key == KratosUiNode.GroupEnum.Default)
        .ToArray();
    var groups = allGroups
        .Where(group => group.Key != KratosUiNode.GroupEnum.Default);
}

<section class="section">
    <h1 class="title">@Translator.GetTranslation("Account Settings")</h1>
    @if (Model.Ui.Messages != null)
    {
        foreach (var message in Model.Ui.Messages)
        {
            @await Component.InvokeAsync("KratosUiTextMessage", message)
        }
    }
    @foreach (var group in groups)
    {
        <hr/>
        <h3 class="subtitle mt-3">@group.Key.ToLocalString(Translator)</h3>
        <form class="mb-3" action="@Model.ReturnTo" method="post">
            @foreach (var node in defaultNodes)
            {
                @await Component.InvokeAsync("KratosUiNodeInput", node)
            }
            @foreach (var node in group)
            {
                @await Component.InvokeAsync("KratosUiNodeInput", node)
            }
        </form>
    }
</section>